<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.4</version>
		<relativePath />
	</parent>

	<groupId>com.morphix</groupId>
	<artifactId>morphix</artifactId>
	<version>1.0.0</version>

	<name>MorphiX</name>

	<properties>
		<java.version>21</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<pitest.plugin.version>1.17.0</pitest.plugin.version>
		<pitest.plugin.junit5.version>1.2.1</pitest.plugin.junit5.version>
		<jacoco.plugin.version>0.8.12</jacoco.plugin.version>
	</properties>

	<dependencies>

		<!-- Testing -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<argLine>
						-XX:+EnableDynamicAgentLoading
					</argLine>
					<argLine>
						--add-opens java.base/java.util=ALL-UNNAMED
					</argLine>
					<argLine>
						--add-opens java.base/java.lang=ALL-UNNAMED
					</argLine>
					<argLine>
						--add-opens java.base/java.lang.invoke=ALL-UNNAMED
					</argLine>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!--Jacoco code coverage -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.plugin.version}</version>
				<executions>
					<execution>
						<id>pre-unit-test</id>
						<phase>test-compile</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>
								${project.build.directory}/jacoco/coverage-reports/jacoco.exec</destFile>
							<propertyName>argLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>
								${project.build.directory}/jacoco/coverage-reports/jacoco.exec</dataFile>
							<outputDirectory>
								${project.build.directory}/jacoco/coverage-reports</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Mutation testing -->
			<!-- mvn org.pitest:pitest-maven:mutationCoverage -->
			<!-- mvn -DwithHistory org.pitest:pitest-maven:mutationCoverage -->
			<plugin>
				<groupId>org.pitest</groupId>
				<artifactId>pitest-maven</artifactId>
				<version>${pitest.plugin.version}</version>
				<!-- Allows it to work with JUnit 5 -->
				<dependencies>
					<dependency>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-junit5-plugin</artifactId>
						<version>${pitest.plugin.junit5.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<targetClasses>
						<param>org.morphix.*</param>
					</targetClasses>
					<targetTests>
						<param>org.morphix.*</param>
					</targetTests>
					<excludedClasses>
						org.morphix.reflection.jvm.*
					</excludedClasses>
					<verbose>true</verbose>
					<jvmArgs>
						<jvmArg>
							-XX:+EnableDynamicAgentLoading
						</jvmArg>
						<jvmArg>
							--add-opens=java.base/java.util=ALL-UNNAMED
						</jvmArg>
						<jvmArg>
							--add-opens=java.base/java.lang=ALL-UNNAMED
						</jvmArg>
						<jvmArg>
							--add-opens=java.base/java.lang.invoke=ALL-UNNAMED
						</jvmArg>
					</jvmArgs>
				</configuration>
			</plugin>

		</plugins>
	</build>

	<reporting>
		<!-- mvn clean install org.pitest:pitest-maven:mutationCoverage site -->

		<plugins>
			<!-- Reports -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>3.7.0</version>
			</plugin>

			<!--Jacoco code coverage -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.plugin.version}</version>
				<reportSets>
					<reportSet>
						<reports>
							<!-- select non-aggregate reports -->
							<report>report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

			<!-- Mutation testing -->
			<!-- mvn clean org.pitest:pitest-maven:mutationCoverage site -->
			<plugin>
				<groupId>org.pitest</groupId>
				<artifactId>pitest-maven</artifactId>
				<version>${pitest.plugin.version}</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>

	<distributionManagement>
	</distributionManagement>

	<repositories>
	</repositories>

</project>
